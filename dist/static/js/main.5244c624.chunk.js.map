{"version":3,"sources":["components/constants/LoginLink.js","store/actions/authAction.js","components/constants/LogoutLink.js","components/constants/NavBar.js","components/dashboard/Notification.js","components/posts/PostSummary.js","components/posts/PostList.js","components/dashboard/Dashboard.js","components/posts/PostDetails.js","components/auth/Login.js","components/auth/Register.js","components/posts/CreatePost.js","store/actions/postAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/postReducer.js","store/reducers/rootReducer.js","config/firebase.js","index.js"],"names":["connect","dispatch","logOut","getState","_ref2","getFirebase","auth","signOut","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","LogoutLink","state","console","log","firebase","links","uid","constants_LoginLink","constants_LogoutLink","Notification","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","PostSummary","_ref","post","title","authorFirstName","authorLastName","createdAt","calendar","PostList","posts","posts_PostSummary","Dashboard","_this$props","this","posts_PostList","dashboard_Notification","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","Login","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","email","password","handleChange","e","setState","defineProperty","target","value","handleSubmit","preventDefault","logIn","inherits","createClass","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","Register","firstName","lastName","register","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreatePost","createPost","history","push","authorId","add","objectSpread","Date","App","constants_NavBar","exact","path","component","PostDetails","isLocalhost","Boolean","window","location","hostname","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initState","authReducer","undefined","action","message","postReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5244c624.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logOut } from \"../../store/actions/authAction\";\n\nconst LoginLink = props => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Post</NavLink>\n      </li>\n      <li>\n        <a onClick={props.logOut}>Logout</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logOut: () => dispatch(logOut())\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(LoginLink);\n","export const logIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n  }\n}\n\nexport const logOut = () => {\n  return ( dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'LOGOUT_SUCCESS' });\n    });\n  }\n} \n\nexport const register = (newUser) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then((resp) => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      })\n    }).then(() => {\n      dispatch({ type: 'USER_REGISTER_SUCCESS' });\n    }).catch( err => {\n      dispatch({ type: 'USER_REGISTRATION_FAILED', err });\n    });\n  }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst LogoutLink = () => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink to=\"/register\">Register</NavLink></li>\n      <li><NavLink to=\"/login\">Login</NavLink></li>\n    </ul>\n  )\n}\n\nexport default LogoutLink;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LoginLink from \"./LoginLink\";\nimport LogoutLink from \"./LogoutLink\";\nimport { connect } from \"react-redux\";\n\nconst NavBar = props => {\n  const { auth, profile } = props;\n  // console.log(auth);\n  const links = auth.uid ? <LoginLink profile={profile} /> : <LogoutLink />;\n  return (\n    <nav className=\"nav-wrapper purple darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          FireBlog\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps)(NavBar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notification = props => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map(item => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user} </span>\n                    <span>{item.content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst PostSummary = ({ post }) => {\n  return (\n    <div className=\"card z depth-0 project summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{post.title}</span>\n        <p>\n          Posted by {post.authorFirstName} {post.authorLastName}\n        </p>\n        <p className=\"grey-text\">\n          {moment(post.createdAt.toDate()).calendar()}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default PostSummary;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PostSummary from './PostSummary'\n\nconst PostList = ({posts}) => {\n  return(\n    <div className=\"project-list section\">\n      { posts && posts.map(post => {\n        return (\n          <Link to={'/post/' + post.id} key={post.id}>\n            <PostSummary post={post} />\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default PostList;","import React, { Component } from \"react\";\nimport Notification from \"./Notification\";\nimport PostList from \"../posts/PostList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  render() {\n    // console.log(this.props);\n    const { posts, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to=\"/login\" />;\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <PostList posts={posts} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notification notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    posts: state.firestore.ordered.posts,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"posts\", orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\n    // (ownProps) => ([`projects/${ownProps.match.params.id}`])\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst PostDetails = props => {\n  // const id = props.match.params.id;\n  // console.log(props);\n  const { post, auth } = props;\n  if (!auth.uid) return <Redirect to=\"/login\" />;\n  if (post) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{post.title}</span>\n            <p>{post.content}</p>\n          </div>\n          <div className=\"card-action gret lighten-4 grey-text\">\n            <div>\n              Posted by {post.authorFirstName} {post.authorLastName}\n            </div>\n            <div>{moment(post.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading post...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const posts = state.firestore.data.posts;\n  const post = posts ? posts[id] : null;\n  return {\n    post: post,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"posts\" }])\n)(PostDetails);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { logIn } from '../../store/actions/authAction'\nimport { Redirect } from 'react-router-dom'\n\n\nexport class Login extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.logIn(this.state);\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if(auth.uid) return <Redirect to='/' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Login</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ( state ) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = ( dispatch ) => {\n  return {\n    logIn: (creds) => dispatch(logIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { register } from '../../store/actions/authAction'\n\nexport class Register extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.register(this.state)\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if(auth.uid) return <Redirect to='/' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Register</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">first Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Register</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{ authError }</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ( state ) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n    \n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    register: (newUser) => dispatch(register(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createPost } from \"../../store/actions/postAction\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreatePost extends Component {\n  state = {\n    title: \"\",\n    content: \"\"\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.createPost(this.state);\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to=\"/login\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create New Post</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n            <textarea\n              id=\"content\"\n              className=\"materialize-textarea\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createPost: post => dispatch(createPost(post))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreatePost);\n","export const createPost = post => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore\n      .collection(\"posts\")\n      .add({\n        ...post,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date()\n      })\n      .then(() => {\n        dispatch({ type: \"CREATE_POST\", post });\n      })\n      .catch(err => {\n        dispatch({ type: \"CREATE_POST_ERROR\", err });\n      });\n  };\n};\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/constants/NavBar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport PostDetails from './components/posts/PostDetails';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport CreatePost from './components/posts/CreatePost';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter >\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/post/:id' component={PostDetails} />\n            <Route path='/login/' component={Login} />\n            <Route path='/register/' component={Register} />\n            <Route path='/create/' component={CreatePost} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'LOGOUT_SUCCESS':\n      console.log('logout success');\n      return state;\n    case 'USER_REGISTER_SUCCESS':\n      console.log('registration successful');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'USER_REGISTRATION_FAILED': \n      console.log('registration failed');\n      return {\n        ...state,\n        authError: action.err.message\n      }\n    default: \n      return state;\n  }\n}\n\nexport default authReducer;","const initState = {\n  posts: [\n    {id: '1', title: 'help me find user1', content: 'blah blah blah'},\n    {id: '2', title: 'help me find user2', content: 'blah blah blah'},\n    {id: '3', title: 'help me find user3', content: 'blah blah blah'}\n  ]\n}\n\nconst postReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'CREATE_POST':\n      console.log('post created', action.post);\n      return state;\n    case 'CREATE_POST_ERROR':\n      console.log('create post error', action.err );\n      return state;\n    default: \n    return state;\n  }\n}\n\nexport default postReducer;","import authReducer from './authReducer'\nimport postReducer from './postReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  post: postReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Initialize Firebase\nconst config = {\n  apiKey: \"AIzaSyAje6s5BVd6zcwiOnikejS4eWwgur9Fcw0\",\n  authDomain: \"fireblog-cc3bf.firebaseapp.com\",\n  databaseURL: \"https://fireblog-cc3bf.firebaseio.com\",\n  projectId: \"fireblog-cc3bf\",\n  storageBucket: \"fireblog-cc3bf.appspot.com\",\n  messagingSenderId: \"534336765517\"\n};\n\nfirebase.initializeApp(config);\n// firebase.firestore().settings({ timestampsInSnapshots: true});\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport firebase from './config/firebase'\n\nconst store = createStore(rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase),\n    reactReduxFirebase(firebase, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  serviceWorker.register();\n})\n\n// If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}